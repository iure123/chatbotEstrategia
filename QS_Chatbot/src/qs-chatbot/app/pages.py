import streamlit as st 
from bot.assistant import generate
from utils import generate_pdf
import base64

# P√°gina de introdu√ß√£o
def intro():
    st.write("# Bem-vindo ao acelerador de Frame üöÄ")
    st.sidebar.success("Selecione uma demonstra√ß√£o acima.")
    st.markdown(
        """
        Bem-vindo ao acelerador de Frame! 
        Estamos ansiosos em poder ajudar no seu projeto, v√° at√© a barra de formul√°rio ou 
        clique aqui para preencher o formul√°rio.
        """
    )

# Fun√ß√£o para exibir e avaliar a hip√≥tese
def evaluate_hypothesis(report):
    st.text_area(
        label="Hip√≥tese de Solu√ß√£o Gerada", 
        value=report, 
        height=200,  
        max_chars=5000,  
        placeholder="A hip√≥tese de solu√ß√£o ser√° exibida aqui...",
        disabled=True,  
        label_visibility="visible"  
    )
    
    satisfied = st.radio("Voc√™ est√° satisfeito com essa hip√≥tese?", ('Sim', 'N√£o'))
    return satisfied

# Fun√ß√£o para perguntar o pr√≥ximo passo
def ask_next_step(report2, report3):
    st.write("Para qual etapa voc√™ gostaria de seguir?")
    
    next_step = st.radio(
        "Escolha uma op√ß√£o:",
        ('Racional de c√°lculo de retorno financeiro', 'Arquitetura b√°sica de solu√ß√µes')
    )

    if next_step == 'Racional de c√°lculo de retorno financeiro':
        st.text_area("Relat√≥rio de Racional de C√°lculo de Retorno Financeiro", value=report2, height=300)
        
        # Gerar PDF do relat√≥rio de retorno financeiro
        pdf = generate_pdf(report2)
        b64 = base64.b64encode(pdf).decode()
        href = f'<a href="data:application/octet-stream;base64,{b64}" download="retorno_financeiro.pdf">Baixar Relat√≥rio de Retorno Financeiro em PDF</a>'
        st.markdown(href, unsafe_allow_html=True)
    
    elif next_step == 'Arquitetura b√°sica de solu√ß√µes':
        st.text_area("Relat√≥rio de Arquitetura B√°sica de Solu√ß√µes", value=report3, height=300)
        
        # Gerar PDF do relat√≥rio de arquitetura de solu√ß√µes
        pdf = generate_pdf(report3)
        b64 = base64.b64encode(pdf).decode()
        href = f'<a href="data:application/octet-stream;base64,{b64}" download="arquitetura_solucoes.pdf">Baixar Relat√≥rio de Arquitetura de Solu√ß√µes em PDF</a>'
        st.markdown(href, unsafe_allow_html=True)

def form_page():
    st.write("# Formul√°rio")
    
    area = st.text_input("√Årea de atua√ß√£o", help="Descreva a √°rea em que voc√™ atua, por exemplo, TI, Vendas, etc.")
    dores = st.text_input("Principais dores ou problemas", help="Informe os principais problemas que voc√™ enfrenta no seu trabalho.")
    beneficios = st.text_input("Benef√≠cios esperados", help="Quais os benef√≠cios que voc√™ espera alcan√ßar com a solu√ß√£o.")
    objetivo = st.text_input("Objetivo principal da solu√ß√£o", help="Defina qual √© o objetivo principal da solu√ß√£o que voc√™ deseja.")

    if "report" not in st.session_state:
        st.session_state.report = None
        st.session_state.report2 = None
        st.session_state.report3 = None

    if st.button("Gerar relat√≥rio"):
        prompt1 = f"""
        √Årea de atua√ß√£o: {area}
        Principais dores: {dores}
        Benef√≠cios esperados: {beneficios}
        Objetivo principal: {objetivo}
        """

        try:
            # Gera√ß√£o da hip√≥tese
            report1, report2, report3 = generate(prompt1)
            st.session_state.report = report1
            st.session_state.report2 = report2
            st.session_state.report3 = report3
        except Exception as e:
            st.error(f"Ocorreu um erro durante a gera√ß√£o do relat√≥rio: {str(e)}")

    if st.session_state.report:
        satisfied = evaluate_hypothesis(st.session_state.report)

        if satisfied == "N√£o":
            st.write("Gerando uma nova hip√≥tese de solu√ß√£o...")
            try:
                st.session_state.report = generate(st.session_state.report)
            except Exception as e:
                st.error(f"Ocorreu um erro ao gerar uma nova hip√≥tese: {str(e)}")

        if satisfied == "Sim" and st.session_state.report2 and st.session_state.report3:
            ask_next_step(st.session_state.report2, st.session_state.report3)

# Chamada da fun√ß√£o de introdu√ß√£o para iniciar a aplica√ß√£o
intro()
form_page()
